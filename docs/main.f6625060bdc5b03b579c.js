(() => { 'use strict'; let e; const t = { 664: (e, t, n) => { const a = n(478); const s = n(833); const o = n(127); const r = n(975); const d = new (n(716).x)(); d.subscribe(e => { typeof document !== 'undefined' && (document.getElementsByClassName('message')[0].textContent = e) }); const i = e => d.next(e); const l = e => { let t; try { t = new URL(e) } catch (e) { return i("That's not an HTTP URL"), !1 } return t.protocol === 'http:' || t.protocol === 'https:' || (i("That's not an HTTP URL"), !1) }; const c = e => e.host === 'teams.microsoft.com' || (i("That's not a teams URL"), !1); const h = e => !(!(e => e && e.search && e.search.includes('https%3A%2F%2F'))(e) && !(e => e && e.hash && e.hash.includes('https:~2F~2F'))(e) && (e.pathname.includes('channel') || e.pathname.includes('thread.skype') ? (i('That teams link does not contain a hidden link. It looks like a link to a teams team team channel, you might have to use teams 🤬'), 1) : (i('That teams link does not contain a hidden link. to deteamsify - just stop using teams'), 1))); const m = e => { const t = (e => ({ hiddenURL: e.searchParams.get('objectUrl') }))(e); const n = (function (e) { const t = e.hash; if (t.startsWith('#/xlsx/viewer/teams/')) return { downloadURL: t.replace(/^#\/xlsx\/viewer\/teams\//, '').replace(/\~2F/g, '/') } }(e)); return t.hiddenURL ? (i(''), t) : n ? (i(''), n) : void i('no hidden URL found in this teams URL, soz. 🤷‍♀️') }; const u = e => { const t = document.createElement('a'); const n = document.createTextNode(e); return t.appendChild(n), t.title = e, t.href = e, t.target = '_blank', t }; const p = (e, t = '500px') => { const n = document.createElement('li'); return n.width = t, n.appendChild(e), n }; const f = e => { document.getElementsByClassName('message')[0].innerHTML = e.message }; const g = e => { if (e.hiddenURL) { const t = document.getElementsByClassName('output')[0]; const n = document.getElementsByClassName('links')[0].children[0]; const a = p(u(e.hiddenURL), t.width); n.prepend(a) } else if (e.downloadURL) { const t = document.getElementsByClassName('output')[0]; const n = document.getElementsByClassName('links')[0].children[0]; const a = p((e => { const t = document.createElement('span'); for (const n of e)t.appendChild(n); return t })([('this is probably a download link for ', document.createTextNode('this is probably a download link for ')), u(e.downloadURL, t.width)])); n.prepend(a) } }; const v = e => (i(''), !!(e && e.length > 0)); document.addEventListener('DOMContentLoaded', () => { (0, a.R)(document.getElementsByClassName('undeteamsified'), 'input').pipe((0, s.b)(200), (0, o.U)(e => e.target.value), (0, r.h)(v), (0, r.h)(l), (0, o.U)(e => new URL(e)), (0, r.h)(c), (0, r.h)(h), (0, o.U)(m)).subscribe(g, f) }) } }; const n = {}; function a (e) { const s = n[e]; if (void 0 !== s) return s.exports; const o = n[e] = { exports: {} }; return t[e](o, o.exports, a), o.exports }a.m = t, e = [], a.O = (t, n, s, o) => { if (!n) { let r = 1 / 0; for (l = 0; l < e.length; l++) { for (var [n, s, o] = e[l], d = !0, i = 0; i < n.length; i++)(!1 & o || r >= o) && Object.keys(a.O).every(e => a.O[e](n[i])) ? n.splice(i--, 1) : (d = !1, o < r && (r = o)); d && (e.splice(l--, 1), t = s()) } return t }o = o || 0; for (var l = e.length; l > 0 && e[l - 1][2] > o; l--)e[l] = e[l - 1]; e[l] = [n, s, o] }, a.d = (e, t) => { for (const n in t)a.o(t, n) && !a.o(e, n) && Object.defineProperty(e, n, { enumerable: !0, get: t[n] }) }, a.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), (() => { const e = { 179: 0 }; a.O.j = t => e[t] === 0; const t = (t, n) => { let s; let o; const [r, d, i] = n; let l = 0; for (s in d)a.o(d, s) && (a.m[s] = d[s]); if (i) var c = i(a); for (t && t(n); l < r.length; l++)o = r[l], a.o(e, o) && e[o] && e[o][0](), e[r[l]] = 0; return a.O(c) }; const n = self.webpackChunkdeteams = self.webpackChunkdeteams || []; n.forEach(t.bind(null, 0)), n.push = t.bind(null, n.push.bind(n)) })(); let s = a.O(void 0, [216], () => a(664)); s = a.O(s) })()
